name: Terraform Plan Check

env:
  AWS_REGION: us-west-2
  DEV_ROLE: arn:aws:iam::351049001406:role/GithubActionRole
  STG_ROLE: arn:aws:iam::351049001406:role/GithubActionRole
  PROD_ROLE: arn:aws:iam::351049001406:role/GithubActionRole
  TF_DIR: terraform/env

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  git_diff:
    runs-on: ubuntu-latest
    env:
      DEFAULT_BRANCH: main
    outputs:
      changes: ${{ steps.git_diff.outputs.changes }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine the base and compare branches
        id: determine_branches
        run: |
          #!/bin/bash
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            FEATURE_BRANCH="${{ github.event.pull_request.head.ref }}"
          elif [ "${{ github.event_name }}" == "push" ]; then
            FEATURE_BRANCH="HEAD"
          fi
          echo "DEFAULT_BRANCH=$DEFAULT_BRANCH" >> $GITHUB_ENV
          echo "FEATURE_BRANCH=$FEATURE_BRANCH" >> $GITHUB_ENV
        shell: bash

      - name: Fetch branches
        id: fetch_branches
        run: |
          #!/bin/bash
          git fetch origin $DEFAULT_BRANCH
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            git fetch origin $FEATURE_BRANCH
          fi
        shell: bash

      - name: Check diff after merge
        id: git_diff
        run: |
          #!/bin/bash

          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo 1
            CHANGED_DIRS=$(git diff --name-only origin/$DEFAULT_BRANCH...origin/$FEATURE_BRANCH | grep '^terraform/env/' | cut -d '/' -f 3 | sort -u | tr '\n' ' ' || true)
          elif [ "${{ github.event_name }}" == "push" ]; then
            echo 2
            PREVIOUS_COMMIT=$(git log $DEFAULT_BRANCH --merges -n 2 --format=format:%H | tail -n 1)
            RECENT_COMMIT=$(git log $DEFAULT_BRANCH --merges -n 1 --format=format:%H)
            CHANGED_DIRS=$(git diff --name-only $PREVIOUS_COMMIT $RECENT_COMMIT | grep '^terraform/env/' | cut -d '/' -f 3 | sort -u | tr '\n' ' ' || true)
          fi

          if [ -n $CHANGED_DIRS ]; then
            echo "Changes detected in the following directories:"
            echo "$CHANGED_DIRS"
            echo "changes=$CHANGED_DIRS" >> $GITHUB_OUTPUT
          else
            echo "No changes detected in Terraform directories."
            echo "changes=" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Clean up
        id: clean_up
        run: |
          git checkout $DEFAULT_BRANCH
        shell: bash

  dev_environment:
    needs: git_diff
    if: contains(needs.git_diff.outputs.changes, 'dev')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "${{ env.DEV_ROLE }}"
          aws-region: "${{ env.AWS_REGION }}"
      
      - name: Read .terraform-version
        id: read_version
        run: echo "TERRAFORM_VERSION=$(cat ${{ env.TF_DIR }}/dev/.terraform-version)" >> $GITHUB_ENV

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Initialize Terraform
        run: |
          cd ${{ env.TF_DIR }}/dev
          terraform init

      - name: Validate Terraform configuration
        run: |
          cd ${{ env.TF_DIR }}/dev
          terraform validate

      - name: Plan Terraform changes
        run: |
          cd ${{ env.TF_DIR }}/dev
          terraform plan -out=tfplan.binary

  stg_environment:
    needs: git_diff
    if: contains(needs.git_diff.outputs.changes, 'stg')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "${{ env.STG_ROLE }}"
          aws-region: "${{ env.AWS_REGION }}"

      - name: Read .terraform-version
        id: read_version
        run: echo "TERRAFORM_VERSION=$(cat ${{ env.TF_DIR }}/stg/.terraform-version)" >> $GITHUB_ENV

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Initialize Terraform
        run: |
          cd ${{ env.TF_DIR }}/stg
          terraform init

      - name: Validate Terraform configuration
        run: |
          cd ${{ env.TF_DIR }}/stg
          terraform validate

      - name: Plan Terraform changes
        run: |
          cd ${{ env.TF_DIR }}/stg
          terraform plan -out=tfplan.binary

  prod_environment:
    needs: git_diff
    if: contains(needs.git_diff.outputs.changes, 'prod')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "${{ env.PROD_ROLE }}"
          aws-region: "${{ env.AWS_REGION }}"

      - name: Read .terraform-version
        id: read_version
        run: echo "TERRAFORM_VERSION=$(cat ${{ env.TF_DIR }}/prod/.terraform-version)" >> $GITHUB_ENV

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Initialize Terraform
        run: |
          cd ${{ env.TF_DIR }}/prod
          terraform init

      - name: Validate Terraform configuration
        run: |
          cd ${{ env.TF_DIR }}/prod
          terraform validate

      - name: Plan Terraform changes
        run: |
          cd ${{ env.TF_DIR }}/prod
          terraform plan -out=tfplan.binary
